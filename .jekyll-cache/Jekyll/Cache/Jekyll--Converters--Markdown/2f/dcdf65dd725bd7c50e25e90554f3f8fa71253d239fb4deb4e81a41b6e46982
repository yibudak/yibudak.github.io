I"…<p>Merhaba, son zamanlarda birÃ§ok insanÄ±n bu iÅŸle ilgilenmesinden dolayÄ± Twitterâ€™dan veri Ã§ekmek hayli zorlaÅŸmÄ±ÅŸ durumda. Limitlere takÄ±lmayan, doÄŸru sonuÃ§ Ã¼reten bir scrapper yazmak istediÄŸiniz zaman artÄ±k Twitter APIâ€™den baÅŸka bir yol yokmuÅŸ gibi gÃ¶rÃ¼nse de Twint kÃ¼tÃ¼phanesi bu iÅŸi muazzam derecede baÅŸarÄ±yor.</p>

<p><img src="post_resources/twitter-scrapping/head.png" alt="image" class="postimg" /></p>

<h1 id="twint-kÃ¼tÃ¼phanesi-hakkÄ±nda"><a href="#header-3"></a>Twint kÃ¼tÃ¼phanesi hakkÄ±nda</h1>

<p>Twint kÃ¼tÃ¼phanesi son zamanlarda kullandÄ±ÄŸÄ±m en sorunsuz twitter scrapping aracÄ±. DiÄŸer kÃ¼tÃ¼phanelere baktÄ±ÄŸÄ±mÄ±zda Ã§oÄŸunun Ã§alÄ±ÅŸmadÄ±ÄŸÄ±nÄ± veya API key istediÄŸini gÃ¶rÃ¼yoruz. Twint ise ne API eriÅŸimi istiyor ne de bizi saÃ§ma sapan hatalarla uÄŸraÅŸtÄ±rÄ±yor.</p>

<p>BaÅŸlÄ±ca Ã¶zellikleri ÅŸu ÅŸekilde;</p>

<ul>
  <li>Neredeyse bÃ¼tÃ¼n tweetleri Ã§ekebilir. (yaklaÅŸÄ±k 3200 tweet ile sÄ±nÄ±rlÄ±)</li>
  <li>Tor aÄŸÄ± desteÄŸi</li>
  <li>Verileri dataframeâ€™e kaydetme (pandas kullanarak)</li>
  <li>HÄ±zlÄ± ve basit kurulum</li>
  <li>Kullanmak iÃ§in Twitterâ€™a giriÅŸ yapmaya gerek yok, anonim olarak bÃ¼tÃ¼n fonksiyonlarÄ±nÄ± kullanabilirsiniz.</li>
</ul>

<h1 id="kurulumu-ve-kullanÄ±mÄ±"><a href="#header-3"></a>Kurulumu ve kullanÄ±mÄ±</h1>

<p>Kurmak iÃ§in:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip3 install --user --upgrade git+https://github.com/twintproject/twint.git@origin/master#egg=twint
</code></pre></div></div>

<p>Komut satÄ±rÄ±ndan kullanmak isterseniz:</p>

<p><code class="language-plaintext highlighter-rouge">twint -u hesap_adi (tanÄ±mladÄ±ÄŸÄ±nÄ±z hesabÄ±n bÃ¼tÃ¼n tweetlerini listeler)</code></p>

<p><code class="language-plaintext highlighter-rouge">twint -u hesap_adi -s kelime (tanÄ±mladÄ±ÄŸÄ±nÄ±z hesapta X kelimeyi iÃ§eren bÃ¼tÃ¼n tweetleri listeler)</code></p>

<p><code class="language-plaintext highlighter-rouge">twint -u hesap_adi --following (tanÄ±mladÄ±ÄŸÄ±nÄ±z hesabÄ±n takip ettiÄŸi kullanÄ±cÄ±lar listeler)</code></p>

<p>gibi Ã¶rnekler mevcut, isterseniz projenin Github sayfasÄ±na bakarak daha detaylÄ± inceleyebilirsiniz.</p>

<h1 id="kod-iÃ§erisinde-twint-Ã§alÄ±ÅŸtÄ±rmak"><a href="#header-3"></a>Kod iÃ§erisinde Twint Ã§alÄ±ÅŸtÄ±rmak</h1>

<p>Can sÄ±kÄ±ntÄ±sÄ±ndan yazdÄ±ÄŸÄ±m bir kodu aÅŸaÄŸÄ±ya paylaÅŸÄ±yorum elimden geldiÄŸince karmaÅŸÄ±k yerlere yorum ekledim, kod merkezinize ekleyebilirsiniz. Herkese kolay gelsin.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">twint</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="nn">tqdm</span> <span class="kn">import</span> <span class="n">tqdm</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">from</span> <span class="nn">requests.packages.urllib3.exceptions</span> <span class="kn">import</span> <span class="n">InsecureRequestWarning</span>


<span class="k">def</span> <span class="nf">get_verified_users</span><span class="p">():</span>
<span class="s">'''twitter mavi tikli kullanÄ±cÄ±larÄ±
@verified kullanÄ±cÄ±sÄ±nda takip ediyor.
    c = twint.Config()
    c.Username = "verified"
    c.Store_csv = True
    c.Output = "verified_users.csv"
    twint.run.Following(c)


def get_unshorten_link(url):
'''</span>
<span class="n">twitter</span> <span class="n">hesabÄ±nda</span> <span class="n">ekli</span> <span class="n">olan</span> <span class="n">URL</span><span class="p">,</span>
<span class="n">bir</span> <span class="n">kÄ±saltma</span> <span class="n">servisinden</span> <span class="n">geÃ§iyor</span><span class="p">,</span>
<span class="n">gerÃ§ek</span> <span class="n">URL</span><span class="s">'ye eriÅŸmek iÃ§in.
'''
    try:
        real_url = requests.head(url, allow_redirects=True, timeout=10,
                                 verify= False)
    except:
        real_url = "No website"
        return real_url
    return real_url.url


def library_caller(username):
    user_attr = []
    username = username.replace("</span><span class="se">\n</span><span class="s">", "")
    if username == '</span><span class="n">username</span><span class="s">':
        return
    config = twint.Config()
    config.Username = username
    config.Store_object = True
    config.Store_object_users_list = user_attr
    config.Hide_output = True
    config.Retries_count = 3
    try:
        twint.run.Lookup(config)
    except:
        return
    if user_attr[0].url:
        web = get_unshorten_link(user_attr[0].url)
    else:
        web = "No Website"
    return username, web


def main():
    file_username = open('</span><span class="n">verified_users</span><span class="p">.</span><span class="n">csv</span><span class="s">', '</span><span class="sa">r</span><span class="s">')
    usernames = file_username.readlines()
    file_username.close()
    file = open("verified_users_data.csv", '</span><span class="n">a</span><span class="s">', encoding="utf-8", newline='')
    for username in usernames:
        data = library_caller(username)
        try:
            if data:
                data_frame = pd.DataFrame({"Username": [data[0]], "Website": [data[1]]})
                data_frame.to_csv(file, header=file.tell() == 0, index=False)
        except:
            continue


if __name__ == '</span><span class="n">__main__</span><span class="s">':
    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
    get_verified_users()
    main()




</span></code></pre></div></div>
:ET